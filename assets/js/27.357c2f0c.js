(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{442:function(s,e,a){s.exports=a.p+"assets/img/uTools_1653744188860.28f13f6b.png"},582:function(s,e,a){"use strict";a.r(e);var n=a(35),r=Object(n.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#引言"}},[s._v("引言")]),n("ul",[n("li",[n("a",{attrs:{href:"#背景"}},[s._v("背景")])]),n("li",[n("a",{attrs:{href:"#关系型数据库-rmdbs-与非关系型数据库-nosql-的对比"}},[s._v("关系型数据库（RMDBS）与非关系型数据库（NoSQL）的对比")])])])]),n("li",[n("a",{attrs:{href:"#redis介绍"}},[s._v("redis介绍")]),n("ul",[n("li",[n("a",{attrs:{href:"#定义"}},[s._v("定义")])]),n("li",[n("a",{attrs:{href:"#redis特性"}},[s._v("redis特性")])]),n("li",[n("a",{attrs:{href:"#redis解决什么问题-与传统数据库相比"}},[s._v("Redis解决什么问题（与传统数据库相比）")])]),n("li",[n("a",{attrs:{href:"#redis的应用场景"}},[s._v("Redis的应用场景")])]),n("li",[n("a",{attrs:{href:"#redis的数据类型及主要特性"}},[s._v("Redis的数据类型及主要特性")])])])]),n("li",[n("a",{attrs:{href:"#redis环境安装"}},[s._v("redis环境安装")]),n("ul",[n("li",[n("a",{attrs:{href:"#下载和安装"}},[s._v("下载和安装")])]),n("li",[n("a",{attrs:{href:"#redis的配置"}},[s._v("redis的配置")])]),n("li",[n("a",{attrs:{href:"#redis的使用"}},[s._v("Redis的使用")])])])]),n("li",[n("a",{attrs:{href:"#redis数据类型"}},[s._v("redis数据类型")]),n("ul",[n("li",[n("a",{attrs:{href:"#string类型"}},[s._v("string类型:")])]),n("li",[n("a",{attrs:{href:"#hash类型"}},[s._v("hash类型")])]),n("li",[n("a",{attrs:{href:"#list类型"}},[s._v("list类型")])]),n("li",[n("a",{attrs:{href:"#set类型"}},[s._v("set类型")])]),n("li",[n("a",{attrs:{href:"#zset类型-sortedset"}},[s._v("zset类型(sortedSet)")])]),n("li",[n("a",{attrs:{href:"#使用场景"}},[s._v("使用场景")])]),n("li",[n("a",{attrs:{href:"#任何数据类型都通用的命令"}},[s._v("任何数据类型都通用的命令")])])])]),n("li",[n("a",{attrs:{href:"#python操作redis"}},[s._v("Python操作redis")]),n("ul",[n("li",[n("a",{attrs:{href:"#python对redis基本操作"}},[s._v("python对redis基本操作")])]),n("li",[n("a",{attrs:{href:"#redis案例"}},[s._v("redis案例")])])])]),n("li",[n("a",{attrs:{href:"#redis测试场景"}},[s._v("Redis测试场景")]),n("ul",[n("li",[n("a",{attrs:{href:"#参考"}},[s._v("参考")])])])])])]),n("p"),s._v(" "),n("h2",{attrs:{id:"引言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[s._v("#")]),s._v(" 引言")]),s._v(" "),n("h3",{attrs:{id:"背景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),n("ul",[n("li",[s._v("在Web应用发展的初期，那时关系型数据库受到了较为广泛的关注和应用，原因是因为那时候Web站点基本上访问和并发不高、交互也较少。而在后来，随着访问量的提升，使用关系型数据库的Web站点多多少少都开始在性能上出现了一些瓶颈，而瓶颈的源头一般是在磁盘的I/O上。而随着互联网技术的进一步发展，各种类型的应用层出不穷，这导致在当今云计算、大数据盛行的时代，对性能有了更多的需求，主要体现在以下四个方面：\n"),n("ul",[n("li",[s._v("低延迟的读写速度：应用快速地反应能极大地提升用户的满意度")]),s._v(" "),n("li",[s._v("支撑海量的数据和流量：对于搜索这样大型应用而言，需要利用PB级别的数据和能应对百万级的流量")]),s._v(" "),n("li",[s._v("大规模集群的管理：系统管理员希望分布式应用能更简单的部署和管理")]),s._v(" "),n("li",[s._v("庞大运营成本的考量：IT部门希望在硬件成本、软件成本和人力成本能够有大幅度地降低")])])]),s._v(" "),n("li",[s._v("为了克服这一问题，NoSQL应运而生，它同时具备了"),n("strong",[s._v("高性能")]),s._v("、"),n("strong",[s._v("可扩展性强")]),s._v("、"),n("strong",[s._v("高可用")]),s._v("等优点，受到广泛开发人员和仓库管理人员的青睐。")])]),s._v(" "),n("h3",{attrs:{id:"关系型数据库-rmdbs-与非关系型数据库-nosql-的对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库-rmdbs-与非关系型数据库-nosql-的对比"}},[s._v("#")]),s._v(" 关系型数据库（RMDBS）与非关系型数据库（NoSQL）的对比")]),s._v(" "),n("ul",[n("li",[s._v("数据库中表与表的数据之间存在某种关联的内在关系，因为这种关系，所以我们称这种数据库为关系型数据库。典型：Mysql/MariaDB、postgreSQL、Oracle、SQLServer、DB2、Access、SQLlite3。特点：\n"),n("ul",[n("li",[s._v("全部使用SQL（结构化查询语言）进行数据库操作。")]),s._v(" "),n("li",[s._v("都存在主外键关系，表，等等关系特征。")]),s._v(" "),n("li",[s._v("大部分都支持各种关系型的数据库的特性：事务、存储过程、触发器、视图、临时表、模式、函数")])])]),s._v(" "),n("li",[s._v("NOSQL：not only sql，泛指非关系型数据库。泛指那些不使用SQL语句进行数据操作的数据库，所有数据库中只要不使用SQL语句的都是非关系型数据库。典型：Redis、MongoDB、hbase、 Hadoop、elasticsearch、图数据库(Neo4j、GraphDB、SequoiaDB)。。。。\n"),n("ul",[n("li",[s._v("每一款都不一样。用途不一致，功能不一致，各有各的操作方式。")]),s._v(" "),n("li",[s._v("基本不支持主外键关系，也没有事务的概念。（MongoDB号称最接近关系型数据库的，所以MongoDB有这些的。）")])])])]),s._v(" "),n("h2",{attrs:{id:"redis介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis介绍"}},[s._v("#")]),s._v(" redis介绍")]),s._v(" "),n("h3",{attrs:{id:"定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[s._v("#")]),s._v(" 定义")]),s._v(" "),n("ul",[n("li",[s._v("Redis（Remote Dictionary Server ，远程字典服务） 是一个使用ANSI C编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库，是NoSQL数据库。")]),s._v(" "),n("li",[s._v("redis的出现主要是为了替代早期的Memcache缓存系统的。map内存型(数据存放在内存中)的非关系型(nosql)key-value(键值存储)数据库， 支持数据的持久化(基于RDB和AOF，注: 数据持久化时将数据存放到文件中，每次启动redis之后会先将文件中数据加载到内存，经常用来做缓存、数据共享、购物车、消息队列、计数器、限流等。(最基本的就是缓存一些经常用到的数据，提高读写速度)。")])]),s._v(" "),n("h3",{attrs:{id:"redis特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis特性"}},[s._v("#")]),s._v(" redis特性")]),s._v(" "),n("ol",[n("li",[s._v("速度快")]),s._v(" "),n("li",[s._v("持久化")]),s._v(" "),n("li",[s._v("多种数据结构")]),s._v(" "),n("li",[s._v("支持多种编程语言")]),s._v(" "),n("li",[s._v("功能丰富")]),s._v(" "),n("li",[s._v("简单：代码短小精悍")]),s._v(" "),n("li",[s._v("主从复制")]),s._v(" "),n("li",[s._v("高可用、分布式")])]),s._v(" "),n("h3",{attrs:{id:"redis解决什么问题-与传统数据库相比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis解决什么问题-与传统数据库相比"}},[s._v("#")]),s._v(" Redis解决什么问题（与传统数据库相比）")]),s._v(" "),n("ol",[n("li",[s._v("数据量大访问慢")]),s._v(" "),n("li",[s._v("排序、数据分段不好处理\n"),n("ul",[n("li",[s._v("传统数据库order by处理，会考虑索引相关问题")]),s._v(" "),n("li",[s._v("分段如select * from table limit 10000,10，本质上还是会查前面的10000行数据，然后取后面的10条，性能糟糕")])])]),s._v(" "),n("li",[s._v("业务逻辑不好处理")]),s._v(" "),n("li",[s._v("IO的痛")])]),s._v(" "),n("h3",{attrs:{id:"redis的应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis的应用场景"}},[s._v("#")]),s._v(" Redis的应用场景")]),s._v(" "),n("p",[s._v("Redis 的应用场景包括：缓存系统（“热点”数据：高频读、低频写）、计数器、消息队列系统、排行榜、社交网络和实时系统。")]),s._v(" "),n("h3",{attrs:{id:"redis的数据类型及主要特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis的数据类型及主要特性"}},[s._v("#")]),s._v(" Redis的数据类型及主要特性")]),s._v(" "),n("p",[s._v("Redis提供的数据类型主要分为5种自有类型和一种自定义类型，这5种自有类型包括：String类型、哈希类型、列表类型、集合类型和顺序集合类型。")]),s._v(" "),n("h2",{attrs:{id:"redis环境安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis环境安装"}},[s._v("#")]),s._v(" redis环境安装")]),s._v(" "),n("h3",{attrs:{id:"下载和安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下载和安装"}},[s._v("#")]),s._v(" 下载和安装")]),s._v(" "),n("ul",[n("li",[s._v("下载地址：https://github.com/tporadowski/redis/releases")]),s._v(" "),n("li",[s._v("使用以下命令启动redis服务端")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("redis-server C:/tool/redis/redis.windows.conf\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("redis作为windows服务启动方式")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("redis-server --service-install redis.windows.conf\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("启动服务")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("redis-server –service-start\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("停止服务")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("redis-server –service-stop\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("如果连接操作redis，可以在终端下，使用以下命令：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("redis-cli\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("ubuntu下安装：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("安装命令：sudo apt-get install -y redis-server\n卸载命令：sudo apt-get purge --auto-remove redis-server \n关闭命令：sudo service redis-server stop \n开启命令：sudo service redis-server start \n重启命令：sudo service redis-server restart\n配置文件：/etc/redis/redis.conf\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"redis的配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis的配置"}},[s._v("#")]),s._v(" redis的配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("cat /etc/redis/redis.conf\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("redis的核心配置选项\n"),n("ul",[n("li",[n("p",[s._v("绑定ip：访问白名单，如果需要远程访问，可将此注释，或绑定1个真实ip")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("bind 127.0.0.1   xx.xx.xx.xx\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("端口，默认为6379，并且会每次开机自动启动")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("port 6379\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("是否以守护进程运行")]),s._v(" "),n("ul",[n("li",[s._v("如果以守护进程运行，则不会在命令阻塞，类似于服务")]),s._v(" "),n("li",[s._v("如果以守护进程运行，则当前终端被阻塞")]),s._v(" "),n("li",[s._v("设置为yes表示守护进程，设置为no表示守护进程")]),s._v(" "),n("li",[s._v("推荐设置为yes"),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("daemonize yes\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])])]),s._v(" "),n("li",[n("p",[s._v("RDB持久化的备份策略（RDB备份是默认开启的，Redis默认会保存内存数据到磁盘，如果只是把Redis作为缓存使用，这样就会影响性能。）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" # save 时间 读写次数\n save 900 1     # 当redis在900内至少有1次读写操作，则触发一次数据库的备份操作\n save 300 10    # 当redis在300内至少有10次读写操作，则触发一次数据库的备份操作\n save 60 10000  # 当redis在60内至少有10000次读写操作，则触发一次数据库的备份操作\n 注释掉以上三行，即作为缓存使用\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("RDB持久化的备份文件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("dbfilename dump.rdb\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("RDB持久化数据库数据文件的所在目录")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("dir /var/lib/redis\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("日志文件所载目录")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("loglevel notice\nlogfile /var/log/redis/redis-server.log\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("进程ID文件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("pidfile /var/run/redis/redis-server.pid\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("数据库，默认有16个，数据名是不能自定义的，只能是0-15之间，当然这个15是数据库数量-1")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("database 16\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("redis的登录密码，生产阶段打开，开发阶段避免麻烦，一般都是注释的。redis在6.0版本以后新增了ACL访问控制机制，新增了用户管理，这个版本以后才有账号和密码，再次之前只有没有密码没有账号")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# requirepass foobared\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("注意：开启了以后，redis-cli终端下使用 auth 密码来认证登录。")])])]),s._v(" "),n("li",[n("p",[s._v("AOF持久化的开启配置项(默认值是no，关闭状态)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("appendonly no\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("AOF持久化的备份文件（AOF的备份数据文件与RDB的备份数据文件保存在同一个目录下，由dir配置项指定）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('appendfilename "appendonly.aof"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("AOF持久化备份策略[时间]")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# appendfsync always\nappendfsync everysec    # 工作中最常用。每一秒备份一次\n# appendfsync no\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("哨兵集群：一主二从三哨兵(3台服务器)")])]),s._v(" "),n("li",[n("p",[s._v("更改后需要重启 Redis服务，使修改后的配置生效！")])])])])]),s._v(" "),n("h3",{attrs:{id:"redis的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis的使用"}},[s._v("#")]),s._v(" Redis的使用")]),s._v(" "),n("ul",[n("li",[s._v("redis是一款基于CS架构的数据库，所以redis有客户端redis-cli，也有服务端redis-server。")]),s._v(" "),n("li",[s._v("其中，客户端可以使用go、java、python等编程语言，也可以终端下使用命令行工具管理redis数据库，甚至可以安装一些别人开发的界面工具，例如：RDM。")]),s._v(" "),n("li",[s._v("redis-cli客户端连接服务器：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# redis-cli -h `redis服务器ip` -p `redis服务器port`\nredis-cli -h 10.16.244.3 -p 6379\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"redis数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis数据类型"}},[s._v("#")]),s._v(" redis数据类型")]),s._v(" "),n("ul",[n("li",[s._v("redis可以理解成一个全局的大字典，key就是数据的唯一标识符。根据key对应的值不同，可以划分成5个基本数据类型。")])]),s._v(" "),n("h3",{attrs:{id:"string类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string类型"}},[s._v("#")]),s._v(" string类型:")]),s._v(" "),n("ul",[n("li",[s._v("字符串类型，是 Redis 中最为基础的数据存储类型，它在 Redis 中是二进制安全的，也就是byte类型。")]),s._v(" "),n("li",[s._v("单个数据的最大容量是512M。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("key: 值\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("GET/MGET\nSET/SETEX/MSET/MSETNX\nINCR/DECR\nGETSET\nDEL\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"设置键值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置键值"}},[s._v("#")]),s._v(" 设置键值")]),s._v(" "),n("ul",[n("li",[s._v("set 设置的数据没有额外操作时，是不会过期的。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("set key value\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("设置键为name值为yuan的数据，一个变量可以设置多次")]),s._v(" "),n("li",[s._v("注意：redis中的所有数据操作，如果设置的键不存在则为添加，如果设置的键已经存在则修改。")]),s._v(" "),n("li",[s._v("设置一个键，当键不存在时才能设置成功，用于一个变量只能被设置一次的情况。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("setnx  key  value\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("一般用于给数据加锁(分布式锁)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("127.0.0.1:6379> setnx goods_1 101\n(integer) 1\n127.0.0.1:6379> setnx goods_1 102\n(integer) 0  # 表示设置不成功\n\n127.0.0.1:6379> del goods_1\n(integer) 1\n127.0.0.1:6379> setnx goods_1 102\n(integer) 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h4",{attrs:{id:"设置键值的过期时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置键值的过期时间"}},[s._v("#")]),s._v(" 设置键值的过期时间")]),s._v(" "),n("p",[s._v("redis中可以对一切的数据进行设置有效期。以秒为单位")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("setex key seconds value\nsetex key1 10 value1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"设置多个键值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置多个键值"}},[s._v("#")]),s._v(" 设置多个键值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("mset key1 value1 key2 value2 ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"字符串拼接值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串拼接值"}},[s._v("#")]),s._v(" 字符串拼接值")]),s._v(" "),n("p",[s._v("常见于大文件上传")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('127.0.0.1:6379> set title "my"\nOK\n127.0.0.1:6379> append title "book"\n(integer) 6\n127.0.0.1:6379> append title "is"\n(integer) 8\n127.0.0.1:6379> append title "python-redis"\n(integer) 20\n127.0.0.1:6379> get title\n"mybookispython-redis"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h4",{attrs:{id:"根据键获取值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#根据键获取值"}},[s._v("#")]),s._v(" 根据键获取值")]),s._v(" "),n("p",[s._v("根据键获取值，如果不存在此键则返回nil")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("get key\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("根据多个键获取多个值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("mget key1 key2 ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("getset：设置key的新值，返回旧值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('127.0.0.1:6379> getset name haha\n"liuly2"\n127.0.0.1:6379> get name\n"haha"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h4",{attrs:{id:"自增自减"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自增自减"}},[s._v("#")]),s._v(" 自增自减")]),s._v(" "),n("p",[s._v("web开发中的电商抢购、秒杀。游戏里面的投票、攻击计数。系统中计算当前在线人数、")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('127.0.0.1:6379> set id 10\nOK\n127.0.0.1:6379> incr id\n(integer) 11\n127.0.0.1:6379> get id\n"11"\n127.0.0.1:6379> decr id\n(integer) 10\n127.0.0.1:6379> get id\n"10"\n127.0.0.1:6379>\n127.0.0.1:6379> incrby id 10  # 自增自减大于1的值时候用incrby\n(integer) 20\n127.0.0.1:6379> get id\n"20"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h4",{attrs:{id:"获取字符串的长度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串的长度"}},[s._v("#")]),s._v(" 获取字符串的长度")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("set name xiaoming\nstrlen name  # 8 \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"比特流操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#比特流操作"}},[s._v("#")]),s._v(" 比特流操作")]),s._v(" "),n("ul",[n("li",[s._v("1字节=8比特 1kb = 1024字节 1mb = 1024kb 1gb = 1024mb")]),s._v(" "),n("li",[s._v("1个int8就是一个字节，一个中文：3个字节")]),s._v(" "),n("li",[s._v("签到记录")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("SETBIT     # 设置一个bit数据的值 \nGETBIT     # 获取一个bit数据的值\nBITCOUNT   # 统计字符串被设置为1的bit数.\nBITPOS     # 返回字符串里面第一个被设置为1或者0的bit位。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"hash类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hash类型"}},[s._v("#")]),s._v(" hash类型")]),s._v(" "),n("p",[s._v("哈希类型，用于存储对象/字典，对象/字典的结构为键值对。key、域、值的类型都为string。域在同一个hash中是唯一的。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("结构：\n键key:{\n    域field: 值value,\n    域field: 值value,\n    域field: 值value,\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"设置指定键的属性-域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置指定键的属性-域"}},[s._v("#")]),s._v(" 设置指定键的属性/域")]),s._v(" "),n("p",[s._v("设置指定键的单个属性")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hset key field value\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取指定键的域-属性的值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取指定键的域-属性的值"}},[s._v("#")]),s._v(" 获取指定键的域/属性的值")]),s._v(" "),n("p",[s._v("获取指定键所有的域/属性")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hkeys key\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取指定键的单个域-属性的值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取指定键的单个域-属性的值"}},[s._v("#")]),s._v(" 获取指定键的单个域/属性的值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hget key field\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取指定键的多个域-属性的值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取指定键的多个域-属性的值"}},[s._v("#")]),s._v(" 获取指定键的多个域/属性的值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hmget key field1 field2 ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取指定键的所有值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取指定键的所有值"}},[s._v("#")]),s._v(" 获取指定键的所有值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hvals key\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取hash的所有域值对"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取hash的所有域值对"}},[s._v("#")]),s._v(" 获取hash的所有域值对")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hgetall title\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"删除指定键的域-属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除指定键的域-属性"}},[s._v("#")]),s._v(" 删除指定键的域/属性")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hdel key field1 field2 ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"判断指定属性-域是否存在于当前键对应的hash中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断指定属性-域是否存在于当前键对应的hash中"}},[s._v("#")]),s._v(" 判断指定属性/域是否存在于当前键对应的hash中")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hexists   key  field\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"属性值自增自减"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性值自增自减"}},[s._v("#")]),s._v(" 属性值自增自减")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hincrby key field number\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"list类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#list类型"}},[s._v("#")]),s._v(" list类型")]),s._v(" "),n("ul",[n("li",[s._v("队列，列表的子成员类型为string")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("key: [值1，值2, 值3.....]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"添加子成员"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加子成员"}},[s._v("#")]),s._v(" 添加子成员")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 在左侧(前)添加一条或多条数据\nlpush key value1 value2 ...\n\n# 在右侧(后)添加一条或多条数据\nrpush key value1 value2 ...\n\n# 在指定元素的左边(前)/右边（后）插入一个或多个数据\nlinsert key before 指定元素 value1 value2 ....\nlinsert key after 指定元素 value1 value2 ....\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("注意：当列表如果存在多个成员的情况下，默认只识别第一个。")]),s._v(" "),n("h4",{attrs:{id:"获取列表成员"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取列表成员"}},[s._v("#")]),s._v(" 获取列表成员")]),s._v(" "),n("p",[s._v("根据指定的索引(下标)获取成员的值，负数下标从右边-1开始，逐个递减")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lindex key index\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("移除并获取列表的第一个成员或最后一个成员")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lpop key  # 第一个成员出列\nrpop key  # 最后一个成员出列\n# 开发中往往使用rpush和lpop实现队列的数据结构->实现入列和出列\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"获取列表的切片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取列表的切片"}},[s._v("#")]),s._v(" 获取列表的切片")]),s._v(" "),n("p",[s._v("闭区间[包括stop]")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lrange key start stop\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取列表的长度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取列表的长度"}},[s._v("#")]),s._v(" 获取列表的长度")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("llen key\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"按索引设置值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#按索引设置值"}},[s._v("#")]),s._v(" 按索引设置值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lset key index value\n# redis的列表也有索引，从左往右，从0开始，逐一递增，第1个元素下标为0\n# 索引可以是负数，表示尾部开始计数，如`-1`表示最后1个元素\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"删除指定成员"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除指定成员"}},[s._v("#")]),s._v(" 删除指定成员")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lrem key count value\n# count表示删除的数量，value表示要删除的成员。该命令默认表示将列表从左侧前count个value的元素移除\n# count==0，表示删除列表所有值为value的成员\n# count >0，表示删除列表左侧开始的前count个value成员\n# count <0，表示删除列表右侧开始的前count个value成员\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"set类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set类型"}},[s._v("#")]),s._v(" set类型")]),s._v(" "),n("p",[s._v("无序集合，它的子成员类型为string类型，元素唯一不重复，没有修改操作，重点就是去重和无序。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("key: {值1, 值4, 值3, ...., 值5}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"添加元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加元素"}},[s._v("#")]),s._v(" 添加元素")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sadd key member1 member2 ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取集合的所有的成员"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取集合的所有的成员"}},[s._v("#")]),s._v(" 获取集合的所有的成员")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("smembers key\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取集合的长度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取集合的长度"}},[s._v("#")]),s._v(" 获取集合的长度")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("scard keys \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"随机抽取一个或多个元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#随机抽取一个或多个元素"}},[s._v("#")]),s._v(" 随机抽取一个或多个元素")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spop key [count=1]\n# count为可选参数，不填则默认一个。被提取成员会从集合中被删除掉\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"删除指定元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除指定元素"}},[s._v("#")]),s._v(" 删除指定元素")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("srem key value\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"交集、差集和并集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#交集、差集和并集"}},[s._v("#")]),s._v(" 交集、差集和并集")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sinter  key1 key2 key3 ....    # 交集、比较多个集合中共同存在的成员\nsdiff   key1 key2 key3 ....    # 差集、比较多个集合中不同的成员\nsunion  key1 key2 key3 ....    # 并集、合并所有集合的成员，并去重\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"zset类型-sortedset"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#zset类型-sortedset"}},[s._v("#")]),s._v(" zset类型(sortedSet)")]),s._v(" "),n("p",[s._v("有序集合，它的子成员值的类型为string类型，元素唯一不重复，没有修改操作。权重值(score,分数)从小到大排列。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("key: {\n\t值1 权重值1(数字);\n\t值2 权重值2;\n\t值3 权重值3;\n\t值4 权重值4;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"添加成员"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加成员"}},[s._v("#")]),s._v(" 添加成员")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("zadd key score1 member1 score2 member2 score3 member3 ....\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取score在指定区间的所有成员"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取score在指定区间的所有成员"}},[s._v("#")]),s._v(" 获取score在指定区间的所有成员")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("zrangebyscore key min max     # 按score进行从低往高排序获取指定score区间\nzrevrangebyscore key min max  # 按score进行从高往低排序获取指定score区间\nzrange key start stop         # 按scoer进行从低往高排序获取指定索引区间\nzrevrange key start stop      # 按scoer进行从高往低排序获取指定索引区间\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h4",{attrs:{id:"获取集合长度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取集合长度"}},[s._v("#")]),s._v(" 获取集合长度")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("zcard key\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取指定成员的权重值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取指定成员的权重值"}},[s._v("#")]),s._v(" 获取指定成员的权重值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("zscore key member\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"获取指定成员在集合中的排名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取指定成员在集合中的排名"}},[s._v("#")]),s._v(" 获取指定成员在集合中的排名")]),s._v(" "),n("p",[s._v("排名从0开始计算")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("zrank key member      # score从小到大的排名\nzrevrank key member   # score从大到小的排名\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"获取score在指定区间的所有成员数量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取score在指定区间的所有成员数量"}},[s._v("#")]),s._v(" 获取score在指定区间的所有成员数量")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("zcount key min max\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"给指定成员增加增加权重值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#给指定成员增加增加权重值"}},[s._v("#")]),s._v(" 给指定成员增加增加权重值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("zincrby key score member\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"删除成员"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除成员"}},[s._v("#")]),s._v(" 删除成员")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("zrem key member1 member2 member3 ....\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"删除指定数量的成员"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除指定数量的成员"}},[s._v("#")]),s._v(" 删除指定数量的成员")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 删除指定数量的成员，从最低score开始删除\nzpopmin key [count]\n# 删除指定数量的成员，从最高score开始删除\nzpopmax key [count]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"使用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景")]),s._v(" "),n("ul",[n("li",[s._v("字符串string: 用于保存项目中普通数据，只要键值对都可以保存，例如，保存 session/jwt,定时记录状态，倒计时、验证码、防灌水答案")]),s._v(" "),n("li",[s._v("哈希hash：用于保存项目中的一些结构体/map类型数据，但是不能保存多维结构，例如，商城的购物车，文章信息，json结构数据")]),s._v(" "),n("li",[s._v("列表list：用于保存项目中的列表/切片数据，但是也不能保存多维结构，例如，消息队列，秒杀系统，排队，")]),s._v(" "),n("li",[s._v("无序集合set: 用于保存项目中的一些不能重复的数据，可以用于过滤，例如，候选人名单, 作者名单，")]),s._v(" "),n("li",[s._v("有序集合zset：用于保存项目中一些不能重复，但是需要进行排序的数据,例如：分数排行榜, 海选人排行榜，热搜排行，")])]),s._v(" "),n("h3",{attrs:{id:"任何数据类型都通用的命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#任何数据类型都通用的命令"}},[s._v("#")]),s._v(" 任何数据类型都通用的命令")]),s._v(" "),n("h4",{attrs:{id:"查找键"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查找键"}},[s._v("#")]),s._v(" 查找键")]),s._v(" "),n("p",[s._v("参数支持简单的正则表达式")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("keys pattern\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("查看所有键")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("keys *\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 查看名称中包含`a`的键\nkeys *a*\n# 查看以a开头的键\nkeys a*\n# 查看以a结尾的键\nkeys *a\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"判断键是否存在"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断键是否存在"}},[s._v("#")]),s._v(" 判断键是否存在")]),s._v(" "),n("p",[s._v("如果存在返回1，不存在返回0")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("exists key1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"查看键的的值的数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看键的的值的数据类型"}},[s._v("#")]),s._v(" 查看键的的值的数据类型")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("type key\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"删除键以及键对应的值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除键以及键对应的值"}},[s._v("#")]),s._v(" 删除键以及键对应的值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("del key1 key2 ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"查看键的有效期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看键的有效期"}},[s._v("#")]),s._v(" 查看键的有效期")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("ttl key\n# 结果结果是秒作为单位的整数\n# -1 表示永不过期\n# -2 表示当前数据已经过期，查看一个不存在的数据的有效期就是-2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h4",{attrs:{id:"设置key的有效期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置key的有效期"}},[s._v("#")]),s._v(" 设置key的有效期")]),s._v(" "),n("p",[s._v("给已有的数据重新设置有效期，redis中所有的数据都可以通过expire来设置它的有效期。有效期到了，数据就被删除。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("expire key seconds\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"清空所有key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#清空所有key"}},[s._v("#")]),s._v(" 清空所有key")]),s._v(" "),n("p",[s._v("慎用，一旦执行，则redis所有数据库0~15的全部key都会被清除")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("flushall\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"key重命名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#key重命名"}},[s._v("#")]),s._v(" key重命名")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("rename  oldkey newkey\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"select切换数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#select切换数据库"}},[s._v("#")]),s._v(" select切换数据库")]),s._v(" "),n("p",[s._v("redis的配置文件中，默认有0~15之间的16个数据库，默认操作的就是0号数据库")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("select <数据库ID>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"python操作redis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python操作redis"}},[s._v("#")]),s._v(" Python操作redis")]),s._v(" "),n("h3",{attrs:{id:"python对redis基本操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python对redis基本操作"}},[s._v("#")]),s._v(" python对redis基本操作")]),s._v(" "),n("h4",{attrs:{id:"连接redis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#连接redis"}},[s._v("#")]),s._v(" 连接redis")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 方式1\nimport redis\n\nr = redis.Redis(host='127.0.0.1', port=6379)\nr.set('foo', 'Bar')\nprint(r.get('foo'))\n\n# 方式2\nimport redis\n\npool = redis.ConnectionPool(host='127.0.0.1', port=6379)\nr = redis.Redis(connection_pool=pool)\nr.set('bar', 'Foo')\nprint(r.get('bar'))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("通常情况下, 当我们需要做redis操作时, 会创建一个连接, 并基于这个连接进行redis操作, 操作完成后, 释放连接,一般情况下, 这是没问题的, 但当并发量比较高的时候, 频繁的连接创建和释放对性能会有较高的影响。于是, 连接池就发挥作用了。连接池的原理是, 通过预先创建多个连接, 当进行redis操作时, 直接获取已经创建的连接进行操作, 而且操作完成后, 不会释放, 用于后续的其他redis操作。这样就达到了避免频繁的redis连接创建和释放的目的, 从而提高性能。")]),s._v(" "),n("h4",{attrs:{id:"数据类型操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型操作"}},[s._v("#")]),s._v(" 数据类型操作")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import redis\n\npool = redis.ConnectionPool(host=\'127.0.0.1\', port=6379, db=0, decode_responses=True)\nr = redis.Redis(connection_pool=pool)\n\n# （1）字符串操作：不允许对已经存在的键设置值\nret = r.setnx("name", "yuan")\nprint(ret)  # False\n# （2）字符串操作：设置键有效期\nr.setex("good_1001", 10, "2")\n# （3）字符串操作：自增自减\nr.set("age", 20)\nr.incrby("age", 2)\nprint(r.get("age"))  # b\'22\'\n\n# （4）hash操作：设置hash\nr.hset("info", "name", "rain")\nprint(r.hget("info", "name"))  # b\'rain\'\nr.hset("info", "gender", "male", {"age": 22})\nprint(r.hgetall("info"))  # {b\'name\': b\'rain\', b\'gender\': b\'male\', b\'age\': b\'22\'}\n\n# （5）list操作：设置list\nr.rpush("scores", "100", "90", "80")\nr.rpush("scores", "70")\nr.lpush("scores", "120")\nprint(r.lrange("scores", 0, -1))  # [\'120\', \'100\', \'90\', \'80\', \'70\']\nr.linsert("scores", "AFTER", "100", 95)\nprint(r.lrange("scores", 0, -1))  # [\'120\', \'100\', \'95\', \'90\', \'80\', \'70\']\nprint(r.lpop("scores"))  # 120\nprint(r.rpop("scores"))  # 70\nprint(r.lindex("scores", 1)) # \'95\'\n\n# （6）集合操作\n# key对应的集合中添加元素\nr.sadd("name_set", "zhangsan", "lisi", "wangwu")\n# 获取key对应的集合的所有成员\nprint(r.smembers("name_set"))  # {\'lisi\', \'zhangsan\', \'wangwu\'}\n# 从key对应的集合中随机获取 numbers 个元素\nprint(r.srandmember("name_set", 2))\nr.srem("name_set", "lisi")\nprint(r.smembers("name_set"))  # {\'wangwu\', \'zhangsan\'}\n\n# （7）有序集合操作\n# 在key对应的有序集合中添加元素\nr.zadd("jifenbang", {"yuan": 78, "rain": 20, "alvin": 89, "eric": 45})\n# 按照索引范围获取key对应的有序集合的元素\n# zrange( name, start, end, desc=False, withscores=False, score_cast_func=float)\nprint(r.zrange("jifenbang", 0, -1))  # [\'rain\', \'eric\', \'yuan\', \'alvin\']\nprint(r.zrange("jifenbang", 0, -1, withscores=True))  # [\'rain\', \'eric\', \'yuan\', \'alvin\']\nprint(r.zrevrange("jifenbang", 0, -1, withscores=True))  # [\'rain\', \'eric\', \'yuan\', \'alvin\']\n\nprint(r.zrangebyscore("jifenbang", 0, 100))\nprint(r.zrangebyscore("jifenbang", 0, 100, start=0, num=1))\n\n# 删除key对应的有序集合中值是values的成员\nprint(r.zrem("jifenbang", "yuan"))  # 删除成功返回1\nprint(r.zrange("jifenbang", 0, -1))  # [\'rain\', \'eric\', \'alvin\']\n\n# （8）键操作\nr.delete("scores")\nprint(r.exists("scores"))\nprint(r.keys("*"))\nr.expire("name",10)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br")])]),n("h3",{attrs:{id:"redis案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis案例"}},[s._v("#")]),s._v(" redis案例")]),s._v(" "),n("h4",{attrs:{id:"kv缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kv缓存"}},[s._v("#")]),s._v(" KV缓存")]),s._v(" "),n("p",[n("img",{attrs:{src:a(442),alt:""}}),s._v("\n第一个是最基础也是最常见的就是KV功能，我们可以用Redis来缓存用户信息、会话信息、商品信息等等。下面这段代码就是通过缓存读取逻辑。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import redis\n\npool = redis.ConnectionPool(host='127.0.0.1', port=6379, db=6, decode_responses=True)\nr = redis.Redis(connection_pool=pool)\n\ndef get_user(user_id):\n    user = r.get(user_id)\n    if not user:\n        user = UserInfo.objects.get(pk=user_id)\n        r.setex(user_id, 3600, user)\n    return user\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h4",{attrs:{id:"分布式锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[s._v("#")]),s._v(" 分布式锁")]),s._v(" "),n("ul",[n("li",[s._v("什么是分布式锁\n"),n("ul",[n("li",[s._v("分布式锁其实就是，控制分布式系统不同进程共同访问共享资源的一种锁的实现。如果不同的系统或同一个系统的不同主机之间共享了某个临界资源，往往需要互斥来防止彼此干扰，以保证一致性。")])])]),s._v(" "),n("li",[s._v("提到Redis的分布式锁，很多小伙伴马上就会想到setnx+ expire命令。即先用setnx来抢锁，如果抢到之后，再用expire给锁设置一个过期时间，防止锁忘记了释放。\n"),n("ul",[n("li",[s._v("SETNX 是SET IF NOT EXISTS的简写.日常命令格式是SETNX key value，如果 key不存在，则SETNX成功返回1，如果这个key已经存在了，则返回0。")])])]),s._v(" "),n("li",[s._v("假设某电商网站的某商品做秒杀活动，key可以设置为key_resource_id,value设置任意值，伪代码如下：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('方案1\nimport redis\n\npool = redis.ConnectionPool(host=\'127.0.0.1\')\nr = redis.Redis(connection_pool=pool)\nret = r.setnx("key_resource_id", "ok")\nif ret:\n    r.expire("key_resource_id", 5)  # 设置过期时间\n    print("抢购成功！")\n    r.delete("key_resource_id")  # 释放资源\nelse:\n    print("抢购失败！")\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("ul",[n("li",[s._v("但是这个方案中，setnx和expire两个命令分开了，「不是原子操作」。如果执行完setnx加锁，正要执行expire设置过期时间时，进程crash或者要重启维护了，那么这个锁就“长生不老”了，「别的线程永远获取不到锁啦」。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('方案2：SETNX + value值是(系统时间+过期时间)\n为了解决方案一，「发生异常锁得不到释放的场景」，可以把过期时间放到setnx的value值里面。如果加锁失败，再拿出value值校验一下即可。加锁代码如下：\nimport time\n\ndef foo():\n    expiresTime = time.time() + 10\n    ret = r.setnx("key_resource_id", expiresTime)\n    if ret:\n        print("当前锁不存在，加锁成功")\n        return True\n    oldExpiresTime = r.get("key_resource_id")\n    if float(oldExpiresTime) < time.time():  # 如果获取到的过期时间，小于系统当前时间，表示已经过期\n        # 锁已过期，获取上一个锁的过期时间，并设置现在锁的过期时间\n        newExpiresTime = r.getset("key_resource_id", expiresTime)\n        if oldExpiresTime == newExpiresTime:\n            #  考虑多线程并发的情况，只有一个线程的设置值和当前值相同，它才可以加锁\n            return True  # 加锁成功\n    return False  # 其余情况加锁皆失败\n\nfoo()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('方案3\n实际上，我们还可以使用Py的redis模块中的set函数来保证原子性（包含setnx和expire两条指令）代码如下：\nr.set("key_resource_id", "1", nx=True, ex=10)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"定时任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定时任务"}},[s._v("#")]),s._v(" 定时任务")]),s._v(" "),n("p",[s._v("利用 Redis 也能实现订单30分钟自动取消。\n用户下单之后，在规定时间内如果不完成付款，订单自动取消，并且释放库存使用技术：Redis键空间通知（过期回调）用户下单之后将订单id作为key，任意值作为值存入redis中，给这条数据设置过期时间，也就是订单超时的时间启用键空间通知")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from redis import StrictRedis\n\nredis = StrictRedis(host='localhost', port=6379)\n\n# 监听所有事件\n# pubsub = redis.pubsub()\n# pubsub.psubscribe('__keyspace@0__:*')\n# print('Starting message loop')\n# while True:\n#     message = pubsub.get_message()\n#     if message:\n#         print(message)\n\n# 监听过期key\ndef event_handler(msg):\n    print(\"sss\",msg)\n    thread.stop()\n\npubsub = redis.pubsub()\npubsub.psubscribe(**{'__keyevent@0__:expired': event_handler})\nthread = pubsub.run_in_thread(sleep_time=0.01)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h4",{attrs:{id:"延迟队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#延迟队列"}},[s._v("#")]),s._v(" 延迟队列")]),s._v(" "),n("p",[s._v("延时队列可以通过Redis的zset(有序列表)来实现。我们将消息序列化为一个字符串作为zset的值。这个消息的到期时间处理时间作为score，然后用多个线程轮询zset获取到期的任务进行处理，多线程时为了保障可用性，万一挂了一个线程还有其他线程可以继续处理。因为有多个线程，所有需要考虑并发争抢任务，确保任务不能被多次执行。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import time\nimport uuid\nimport redis\n\npool = redis.ConnectionPool(host=\'127.0.0.1\', port=6379, decode_responses=True)\nr = redis.Redis(connection_pool=pool)\n\ndef delay_task(task_name, delay_time):\n    # 保证value唯一\n    task_id = task_name + str(uuid.uuid4())\n    print()\n    # 5s后重试\n    retry_ts = time.time() + delay_time\n    r.zadd("delay-queue", {task_id: retry_ts})\n\ndef loop():\n    print("循环监听中...")\n    while True:\n        # 最多取1条\n        task_list = r.zrangebyscore("delay-queue", 0, time.time(), start=0, num=1)\n        if not task_list:\n            # 延时队列空的，休息1s\n            print("cost 1秒钟")\n            time.sleep(1)\n            continue\n        task_id = task_list[0]\n        success = r.zrem("delay-queue", task_id)\n        if success:\n            # 处理消息逻辑函数\n            handle_msg(task_id)\n\ndef handle_msg(msg):\n    """消息处理逻辑"""\n    print(f"消息{msg}已经被处理完成！")\n\nimport threading\nt = threading.Thread(target=loop)\nt.start()\n\ndelay_task("任务1延迟5", 5)\ndelay_task("任务2延迟2", 2)\ndelay_task("任务3延迟3", 3)\ndelay_task("任务4延迟10", 10)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("ul",[n("li",[s._v("redis的zrem方法是对多线程争抢任务的关键，它的返回值决定了当前实例有没有抢到任务，因为loop方法可能会被多个线程、多个进程调用， 同一个任务可能会被多个进程线程抢到，通过zrem来决定唯一的属主。")]),s._v(" "),n("li",[s._v("同时，一定要对handle_msg进行异常捕获， 避免因为个别任务处理问题导致的循环异常退出。")])]),s._v(" "),n("h4",{attrs:{id:"发布订阅"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#发布订阅"}},[s._v("#")]),s._v(" 发布订阅")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import threading\nimport redis\n\nr = redis.Redis(host=\'127.0.0.1\')\n\ndef recv_msg():\n    pub = r.pubsub()\n    pub.subscribe("fm104.5")\n    pub.parse_response()\n    while 1:\n        msg = pub.parse_response()\n        print(msg)\n\ndef send_msg():\n    msg = input(">>>")\n    r.publish("fm104.5", msg)\n\nt = threading.Thread(target=send_msg)\nt.start()\nrecv_msg()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h2",{attrs:{id:"redis测试场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis测试场景"}},[s._v("#")]),s._v(" Redis测试场景")]),s._v(" "),n("ol",[n("li",[s._v("redis数据生效时，读取是否正确")]),s._v(" "),n("li",[s._v("redis数据不存在时，能否正常从db读取到正确值，并写入redis和返回给前端")]),s._v(" "),n("li",[s._v("数据在redis和db都不存在时表现是否正常")]),s._v(" "),n("li",[s._v("删除数据时，redis和db数据是否一致")])]),s._v(" "),n("h3",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://www.yuan316.com/post/redis/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://www.yuan316.com/post/redis/"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis官方原版"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"http://www.redis.cn",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis中文官网"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);