(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{664:function(a,t,e){"use strict";e.r(t);var r=e(35),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#移动端类型"}},[a._v("移动端类型")]),e("ul",[e("li",[e("a",{attrs:{href:"#web-app"}},[a._v("web app")])]),e("li",[e("a",{attrs:{href:"#native-app"}},[a._v("native app")])]),e("li",[e("a",{attrs:{href:"#hbrid-app"}},[a._v("hbrid app")])])])]),e("li",[e("a",{attrs:{href:"#移动端app生命周期"}},[a._v("移动端APP生命周期")]),e("ul",[e("li",[e("a",{attrs:{href:"#android"}},[a._v("android")])]),e("li",[e("a",{attrs:{href:"#ios"}},[a._v("ios")])])])]),e("li",[e("a",{attrs:{href:"#安装卸载升级"}},[a._v("安装卸载升级")]),e("ul",[e("li",[e("a",{attrs:{href:"#安装"}},[a._v("安装")])]),e("li",[e("a",{attrs:{href:"#卸载"}},[a._v("卸载")])]),e("li",[e("a",{attrs:{href:"#升级"}},[a._v("升级")])])])]),e("li",[e("a",{attrs:{href:"#稳定性测试"}},[a._v("稳定性测试")]),e("ul",[e("li",[e("a",{attrs:{href:"#monkey"}},[a._v("Monkey")])])])]),e("li",[e("a",{attrs:{href:"#界面易用性"}},[a._v("界面易用性")])]),e("li",[e("a",{attrs:{href:"#适配"}},[a._v("适配")])]),e("li",[e("a",{attrs:{href:"#流量测试"}},[a._v("流量测试")]),e("ul",[e("li",[e("a",{attrs:{href:"#场景"}},[a._v("场景")])]),e("li",[e("a",{attrs:{href:"#测试工具"}},[a._v("测试工具")])]),e("li",[e("a",{attrs:{href:"#减少流量优化方式"}},[a._v("减少流量优化方式")])])])]),e("li",[e("a",{attrs:{href:"#兼容性测试"}},[a._v("兼容性测试")]),e("ul",[e("li",[e("a",{attrs:{href:"#分类"}},[a._v("分类")])]),e("li",[e("a",{attrs:{href:"#测试方式"}},[a._v("测试方式")])]),e("li",[e("a",{attrs:{href:"#android"}},[a._v("android")])]),e("li",[e("a",{attrs:{href:"#ios"}},[a._v("ios")])])])]),e("li",[e("a",{attrs:{href:"#耗电量测试"}},[a._v("耗电量测试")]),e("ul",[e("li",[e("a",{attrs:{href:"#场景"}},[a._v("场景")])]),e("li",[e("a",{attrs:{href:"#测试"}},[a._v("测试")])])])]),e("li",[e("a",{attrs:{href:"#性能测试"}},[a._v("性能测试")]),e("ul",[e("li",[e("a",{attrs:{href:"#冷启动耗时"}},[a._v("冷启动耗时")])]),e("li",[e("a",{attrs:{href:"#页面加载耗时"}},[a._v("页面加载耗时")])]),e("li",[e("a",{attrs:{href:"#fps-帧率"}},[a._v("FPS（帧率）")])]),e("li",[e("a",{attrs:{href:"#gpu渲染"}},[a._v("GPU渲染")])]),e("li",[e("a",{attrs:{href:"#cpu"}},[a._v("CPU")])]),e("li",[e("a",{attrs:{href:"#内存"}},[a._v("内存")])]),e("li",[e("a",{attrs:{href:"#上下行流量"}},[a._v("上下行流量")])]),e("li",[e("a",{attrs:{href:"#包大小限制"}},[a._v("包大小限制")])])])]),e("li",[e("a",{attrs:{href:"#弱网测试"}},[a._v("弱网测试")])]),e("li",[e("a",{attrs:{href:"#边界测试"}},[a._v("边界测试")])]),e("li",[e("a",{attrs:{href:"#中断测试-交叉事件"}},[a._v("中断测试（交叉事件）")])]),e("li",[e("a",{attrs:{href:"#安全测试"}},[a._v("安全测试")])]),e("li",[e("a",{attrs:{href:"#app日志收集"}},[a._v("APP日志收集")]),e("ul",[e("li",[e("a",{attrs:{href:"#ios"}},[a._v("IOS")])]),e("li",[e("a",{attrs:{href:"#android"}},[a._v("Android")])])])]),e("li",[e("a",{attrs:{href:"#adb-安卓调试桥"}},[a._v("ADB（安卓调试桥）")]),e("ul",[e("li",[e("a",{attrs:{href:"#连接手机"}},[a._v("连接手机")])])])]),e("li",[e("a",{attrs:{href:"#手势操作"}},[a._v("手势操作")])]),e("li",[e("a",{attrs:{href:"#用户体验测试"}},[a._v("用户体验测试")])]),e("li",[e("a",{attrs:{href:"#静态代码扫描"}},[a._v("静态代码扫描")])]),e("li",[e("a",{attrs:{href:"#竞品测试"}},[a._v("竞品测试")])]),e("li",[e("a",{attrs:{href:"#说明"}},[a._v("说明")])]),e("li",[e("a",{attrs:{href:"#参考"}},[a._v("参考")])])])]),e("p"),a._v(" "),e("h2",{attrs:{id:"移动端类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端类型"}},[a._v("#")]),a._v(" 移动端类型")]),a._v(" "),e("h3",{attrs:{id:"web-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-app"}},[a._v("#")]),a._v(" web app")]),a._v(" "),e("p",[a._v("指采用Html5语言写出的App，不需要下载安装。类似于现在所说的轻应用。生存在浏览器中的应用，基本上可以说是触屏版的网页应用。例如：依附于微信、支付宝APP的各类小程序：滴滴打车、美团、饿了么等等均属于web app。")]),a._v(" "),e("h3",{attrs:{id:"native-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#native-app"}},[a._v("#")]),a._v(" native app")]),a._v(" "),e("p",[a._v("指的是原生程序，一般依托于操作系统，有很强的交互，是一个完整的App，可拓展性强。需要用户下载安装使用。")]),a._v(" "),e("h3",{attrs:{id:"hbrid-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hbrid-app"}},[a._v("#")]),a._v(" hbrid app")]),a._v(" "),e("p",[a._v("指的是半原生半Web的混合类App。需要下载安装，看上去类似Native App，但只有很少的UI Web View，访问的内容是 Web 。例如：视频类的APP，视频使用的是native的框架，视频下方为web的内容。Hybrid App是一种用Native技术来搭建App的外壳，壳里的内容由Web技术来提供的移动应用，兼具“Native App良好交互体验的优势”和“Web App跨平台开发的优势”")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/mh1pt-Wgw8CxNyrRpOkuKQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考链接"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"移动端app生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端app生命周期"}},[a._v("#")]),a._v(" 移动端APP生命周期")]),a._v(" "),e("h3",{attrs:{id:"android"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#android"}},[a._v("#")]),a._v(" android")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方说明"),e("OutboundLink")],1)]),a._v(" "),e("ol",[e("li",[a._v("onCreate()\nActivity进入Created状态。执行的逻辑在活动的整个生命周期中只发生一次。比如设置内容视图，将活动与ViewModel关联，实例化一些类范围变量等。")]),a._v(" "),e("li",[a._v("onStart()\nActivity进入Started状态。这个调用使activity对用户可见，应用程序"),e("strong",[a._v("准备")]),a._v("让activity进入前台并成为交互式的。")]),a._v(" "),e("li",[a._v("onResume()\nActivity进入恢复状态。用户现在可以与活动"),e("strong",[a._v("进行交互")]),a._v("。在这里，您可以启用在组件可见且在前台时需要运行的任何功能。")]),a._v(" "),e("li",[a._v("onPause()\nActivity进入暂停状态。这个调用表明activity不再在前台，但是如果用户处于多窗口模式，它仍然是可见的。在此期间，您应该暂停或调整不应继续或应适度继续的操作。该活动保持在这种状态，直到活动恢复，例如打开或关闭活动的底部页，或直到它对用户完全不可见，如打开另一个活动。")]),a._v(" "),e("li",[a._v("onStop()\nActivity进入停止状态。活动不再对用户可见。在这里，你应该释放或调整不需要的资源，而活动是不可见的用户。您还应该利用这个机会对cpu相对密集的任务执行关机操作，例如对数据库的操作。")]),a._v(" "),e("li",[a._v("onDestroy()\nActivity进入销毁状态。这里，活动结束了。这可能是因为:")])]),a._v(" "),e("ul",[e("li",[a._v("用户完全退出该活动。")]),a._v(" "),e("li",[a._v("在该活动上调用Finish()。")]),a._v(" "),e("li",[a._v("由于配置更改(如设备旋转或多窗口模式)，系统正在临时销毁该活动")])]),a._v(" "),e("h3",{attrs:{id:"ios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ios"}},[a._v("#")]),a._v(" ios")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developer.apple.com/documentation/uikit/app_and_environment/managing_your_app_s_life_cycle?language=objc",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方说明"),e("OutboundLink")],1)]),a._v(" "),e("ol",[e("li",[a._v("Not running\n未运行，即APP没有启动或者被iOS系统终止运行后的状态。")]),a._v(" "),e("li",[a._v("Inactive\n非活跃，即APP在前台运行，但是没有接收到事件响应。一般介于APP由前台活跃，进入到后台或由后台，进入到前台活跃的中间状态。")]),a._v(" "),e("li",[a._v("Active\n活跃，即APP在前台运行，并且接受事件响应。这是前台运行的一个正常模式。")]),a._v(" "),e("li",[a._v("Background\n后台运行，即APP在后台运行，并且执行代码。APP进入这个状态多半是因为要进入挂起状态。APP在进入挂起状态前，可以在这个状态额外要求一段代码执行时间。另外，一个APP从挂起状态启动时，将直接进入后台状态，而不是非活跃状态。")]),a._v(" "),e("li",[a._v("Suspended\n挂起，即APP在后台状态，但是不执行代码。iOS系统会自动将APP进入这个状态，并且不发送通知给APP。当APP挂起时，APP会在内存中保留，但不执行代码。当内存警告发生时，iOS系统可能会清除已挂起的APP，而不发送通知给APP，以便留出更多内存空间给在前台运行的APP。")])]),a._v(" "),e("h2",{attrs:{id:"安装卸载升级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装卸载升级"}},[a._v("#")]),a._v(" 安装卸载升级")]),a._v(" "),e("h3",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("ol",[e("li",[a._v("android非常简单，提供apk包，可在任何设备安装测试")]),a._v(" "),e("li",[a._v("ios比较复杂，没有苹果审核是不允许安装的。如安装测试版本，可手动添加udid（序列号）到开发者账号，或使用testflight，第三方手机内测服务蒲公英\n"),e("ul",[e("li",[a._v("udid获取：通过itunes工具（电脑安装）或者itools工具连接设备获取")]),a._v(" "),e("li",[a._v("testflight：苹果官方的测试工具，分内部和外部测试，内部不走审核，可添加25个测试人员，通过appleid邮箱添加；外部测试需要苹果审核，可开放10000人测试，需要额外支付费用，要审核所以时间周期会比较久，适合版本稳定")]),a._v(" "),e("li",[a._v("蒲公英只需将内测应用上传，蒲公英会自动生成链接和二维码，内测用户自己扫码下载至手机测试，测试设备同样需要提供udid，添加至开发者账号中。这个工具比FIR更方便，是因为直接扫二维码就可收集udid，直接扫码就能成功安装应用。")])])]),a._v(" "),e("li",[a._v("线上版本安装\n"),e("ul",[e("li",[a._v("android：可上传谷歌商店、360商店、安卓市场等，还有个大应用管家都可上传")]),a._v(" "),e("li",[a._v("ios：只有一个苹果官方的app store，上线发布需要苹果审核和授权，一般3~14天不等")])])])]),a._v(" "),e("h3",{attrs:{id:"卸载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载"}},[a._v("#")]),a._v(" 卸载")]),a._v(" "),e("h3",{attrs:{id:"升级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级"}},[a._v("#")]),a._v(" 升级")]),a._v(" "),e("ol",[e("li",[a._v("在线升级")]),a._v(" "),e("li",[a._v("更新消息推送")])]),a._v(" "),e("h2",{attrs:{id:"稳定性测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#稳定性测试"}},[a._v("#")]),a._v(" 稳定性测试")]),a._v(" "),e("h3",{attrs:{id:"monkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monkey"}},[a._v("#")]),a._v(" Monkey")]),a._v(" "),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("adb shell monkey -p 包名 -v "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/bytedance/Fastbot_iOS",target:"_blank",rel:"noopener noreferrer"}},[a._v("智能monkey_ios"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/bytedance/Fastbot_Android",target:"_blank",rel:"noopener noreferrer"}},[a._v("智能monkey_android"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"界面易用性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#界面易用性"}},[a._v("#")]),a._v(" 界面易用性")]),a._v(" "),e("h2",{attrs:{id:"适配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#适配"}},[a._v("#")]),a._v(" 适配")]),a._v(" "),e("h2",{attrs:{id:"流量测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流量测试"}},[a._v("#")]),a._v(" 流量测试")]),a._v(" "),e("h3",{attrs:{id:"场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[a._v("#")]),a._v(" 场景")]),a._v(" "),e("ol",[e("li",[a._v("应用执行业务流量")]),a._v(" "),e("li",[a._v("应用后台运行流量")]),a._v(" "),e("li",[a._v("首次启动消耗流量")]),a._v(" "),e("li",[a._v("安装包大小")])]),a._v(" "),e("h3",{attrs:{id:"测试工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试工具"}},[a._v("#")]),a._v(" 测试工具")]),a._v(" "),e("ol",[e("li",[a._v("系统自带工具统计")]),a._v(" "),e("li",[a._v("tcpdump、wireshark等网络分析工具")]),a._v(" "),e("li",[a._v("android：\n"),e("ul",[e("li",[a._v("/proc/net/dev")]),a._v(" "),e("li",[a._v("ADB工具获取实时流量")]),a._v(" "),e("li",[a._v("Emmagee轻量级性能监控工具")])])]),a._v(" "),e("li",[a._v("ios：Xcode自带的性能分析工具network activity")])]),a._v(" "),e("h3",{attrs:{id:"减少流量优化方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#减少流量优化方式"}},[a._v("#")]),a._v(" 减少流量优化方式")]),a._v(" "),e("ol",[e("li",[a._v("数据压缩，尤其是图片")]),a._v(" "),e("li",[a._v("数据格式优化，同样信息量数据，json比xml文件小")]),a._v(" "),e("li",[a._v("需要加密压缩的场景，先压缩再加密")]),a._v(" "),e("li",[a._v("减少前端调用后端接口次数")]),a._v(" "),e("li",[a._v("接口返回数据只包含必要数据")]),a._v(" "),e("li",[a._v("客户端缓存")])]),a._v(" "),e("h2",{attrs:{id:"兼容性测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#兼容性测试"}},[a._v("#")]),a._v(" 兼容性测试")]),a._v(" "),e("h3",{attrs:{id:"分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[a._v("#")]),a._v(" 分类")]),a._v(" "),e("ol",[e("li",[a._v("操作系统\n"),e("ul",[e("li",[a._v("主流android版本")]),a._v(" "),e("li",[a._v("主流ios版本")])])]),a._v(" "),e("li",[a._v("分辨率")]),a._v(" "),e("li",[a._v("终端机型")]),a._v(" "),e("li",[a._v("同操作系统，不同语言")]),a._v(" "),e("li",[a._v("不同网络，3G、4G、5G、WIFI、弱网、断网")]),a._v(" "),e("li",[a._v("组件版本")]),a._v(" "),e("li",[a._v("新旧版本兼容")])]),a._v(" "),e("h3",{attrs:{id:"测试方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试方式"}},[a._v("#")]),a._v(" 测试方式")]),a._v(" "),e("ol",[e("li",[a._v("自动化测试")]),a._v(" "),e("li",[a._v("真机测试")]),a._v(" "),e("li",[a._v("云测（testin）")])]),a._v(" "),e("h3",{attrs:{id:"android-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#android-2"}},[a._v("#")]),a._v(" android")]),a._v(" "),e("ol",[e("li",[a._v("因系统开源，不同厂商在此基础上二次开发，所以操作系统类型以及版本非常多，兼容测试比较复杂\n"),e("ul",[e("li",[a._v("常见：华为、小米、oppo、vivo等")]),a._v(" "),e("li",[a._v("还有些许小众非主流操作系统")]),a._v(" "),e("li",[a._v("每个系统很多版本，包括大版本和小版本")]),a._v(" "),e("li",[a._v("每个厂家手机屏大小也差异很大")])])])]),a._v(" "),e("h3",{attrs:{id:"ios-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ios-2"}},[a._v("#")]),a._v(" ios")]),a._v(" "),e("ol",[e("li",[a._v("只有单一的系统，但版本也不少，一般维护最新的几个主流版本兼容，外加屏幕分辨率兼容即可")])]),a._v(" "),e("h2",{attrs:{id:"耗电量测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#耗电量测试"}},[a._v("#")]),a._v(" 耗电量测试")]),a._v(" "),e("h3",{attrs:{id:"场景-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景-2"}},[a._v("#")]),a._v(" 场景")]),a._v(" "),e("ol",[e("li",[a._v("应用执行业务的耗电量")]),a._v(" "),e("li",[a._v("应用后台运行的耗电量")])]),a._v(" "),e("h3",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[a._v("#")]),a._v(" 测试")]),a._v(" "),e("ol",[e("li",[a._v("android\n"),e("ul",[e("li",[a._v("命令行")])]),a._v(" "),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("adb shell dumpsys battery "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" status "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" 切换手机电池状态为非充电状态\nadb shell dumpsys batterystats "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" packageName\nadb shell dumpsys batterystats "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" 获取整个设备的电量消耗信息\nadb shell dumpsys batterystats com.Package.name "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" 获取某个apk的电量消耗信息\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("ul",[e("li",[a._v("第三方测试工具：Emmagee、GT、"),e("a",{attrs:{href:"https://github.com/google/battery-historian",target:"_blank",rel:"noopener noreferrer"}},[a._v("Google history batteria"),e("OutboundLink")],1)])])]),a._v(" "),e("li",[a._v("ios\napple官方sysdiagnose可收集电量信息，再进一步通过instrument工具链中的energy diagnostics进行耗电量分析")])]),a._v(" "),e("h2",{attrs:{id:"性能测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能测试"}},[a._v("#")]),a._v(" 性能测试")]),a._v(" "),e("p",[a._v("APP性能测试指标获取，可通过ADB工具、集成的SDK工具、第三方工具：Emmagee、itest、GT、PerfDog、DoraemonKit（滴滴开源）；Emmagee和itest只支持android，GT和PerfDog对于android和ios系统都支持；PerfDog收费")]),a._v(" "),e("h3",{attrs:{id:"冷启动耗时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#冷启动耗时"}},[a._v("#")]),a._v(" 冷启动耗时")]),a._v(" "),e("ol",[e("li",[a._v("android启动时长测试方法\n"),e("ul",[e("li",[a._v("adb命令")])]),a._v(" "),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("adb shell am start -W packageName/启动的Activity\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("视频录制")])]),a._v(" "),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("adb shell screenrecord --bugreport xxx.mp4\nbugreport可以输出一些时间信息和帧信息，方便分析\n\nadb pull xxx.mp4 /users/awesome/downloads\nwin下可以使用kmplayer按帧播放\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("ul",[e("li",[a._v("前端埋点")]),a._v(" "),e("li",[a._v("通过FFmpeg录屏拆帧，"),e("a",{attrs:{href:"https://ffmpeg.zeranoe.com/builds/",target:"_blank",rel:"noopener noreferrer"}},[a._v("FFmpeg"),e("OutboundLink")],1)]),a._v(" "),e("li",[a._v("抓包看duration")])])]),a._v(" "),e("li",[a._v("ios启动时长测试方法\n"),e("ul",[e("li",[a._v("xcode developer tool，使用instruments的time profiler插件，"),e("a",{attrs:{href:"https://developer.apple.com/xcode/",target:"_blank",rel:"noopener noreferrer"}},[a._v("xcode下载"),e("OutboundLink")],1)]),a._v(" "),e("li",[a._v("客户端计算统计，通过hook函数调用，或者第三方性能工具")]),a._v(" "),e("li",[a._v("录屏分帧，如xrecord录屏，FFmpeg分帧，SSIM选取关键节点，相关工具github搜“ios-control”")])])])]),a._v(" "),e("h3",{attrs:{id:"页面加载耗时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#页面加载耗时"}},[a._v("#")]),a._v(" 页面加载耗时")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("- native：应用内点击任一元素控件，从native到native页面跳转\n- h5：应用内点击任一元素控件，从native到webview页面跳转\n- 参考冷启动耗时\n")])])]),e("h3",{attrs:{id:"fps-帧率"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fps-帧率"}},[a._v("#")]),a._v(" FPS（帧率）")]),a._v(" "),e("p",[a._v("应用的使用流畅度，fps是指画面每秒传输的帧数，每秒钟帧数越多，所显示的动作就会越流畅，一般来说IOS/安卓设备的屏幕刷新率为60帧/秒，要保持画面流畅不卡顿，要求每一帧的时间不超过1000/60=16.6ms，否则就会出现跳帧、画面卡顿")]),a._v(" "),e("ol",[e("li",[a._v("测试工具\n"),e("ul",[e("li",[a._v("adb命令"),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("adb shell dumpsys gfxinfo 包名\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])]),a._v(" "),e("li",[a._v("直接使用开发者选择自带的图标")]),a._v(" "),e("li",[a._v("使用第三方工具Emmagee、GT等")]),a._v(" "),e("li",[a._v("Android Monitor（AndroidStudio自带CPU和内存检测）")]),a._v(" "),e("li",[a._v("perfdog service")])])])]),a._v(" "),e("h3",{attrs:{id:"gpu渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gpu渲染"}},[a._v("#")]),a._v(" GPU渲染")]),a._v(" "),e("p",[a._v("GPU渲染是指在一个像素点上绘制多次（超过一次），过度绘制对动画性能的影响是极其严重的，如果你想要流畅的动画效果，那么一定不能忽视过度绘制。")]),a._v(" "),e("h3",{attrs:{id:"cpu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpu"}},[a._v("#")]),a._v(" CPU")]),a._v(" "),e("ol",[e("li",[a._v("获取方式\n"),e("ul",[e("li",[a._v("读取linux proc文件系统（精确、方便自动化集成）\n"),e("ul",[e("li",[a._v("/proc是一个伪文件系统，只存在内存中，不占用外存空间。它以文件系统的方式为内核与进程提供通信的接口。用户和应用程序可以通过/proc得到系统信息，并可以改变内核的某些参数。由于系统的信息，如进程，是动态改变的，所以在读取/proc目录中的文件时，是动态从系统内核读出所需信息并提交的")]),a._v(" "),e("li",[a._v("主要关注/proc/stat和/proc/进程id/stat文件两个文件")]),a._v(" "),e("li",[a._v("adb shell 进入手机内部shell模式，再cat /proc/stat查看结果")]),a._v(" "),e("li",[a._v("结果文件中的Jiffies（时间片），Jiffies是linux的核心变数，是一个unsigned long类型的变量，用来记录系统开机以来，经过了多少trck，每发生一次timer interrupt，Jiffies变数加1")])]),a._v(" "),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("total "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" user + system + "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("nice")]),a._v(" + idle + iowait + irq + softirq\ncpu使用率 "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("user_end + sys_end + nice_end"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("user_begin + sys_begin + nice_begin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" / "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("total_end - total_begin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" * "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v("%\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("ul",[e("li",[a._v("举例")])]),a._v(" "),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /proc/1258/stat "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" -F "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print $14,$15}'")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])]),a._v(" "),e("li",[a._v("第三方工具，如腾讯GT、网易Emagee，这些工具原理是调用android系统底层API完成数据统计\n"),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/TencentOpen/GT",target:"_blank",rel:"noopener noreferrer"}},[a._v("GT官网"),e("OutboundLink")],1)])])]),a._v(" "),e("li",[a._v("linux top命令（有误差，但方便获取）"),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("adb shell "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("top")]),a._v(" -n "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" packageName\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])]),a._v(" "),e("li",[a._v("dumpsyscpuinfo"),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("adb shell dumpsyscpuinfo "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" packagename "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" cpu.txt\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])]),a._v(" "),e("li",[a._v("Android Monitor（AndroidStudio自带CPU和内存检测）")])])]),a._v(" "),e("li",[a._v("问题分析\n"),e("ul",[e("li",[a._v("如出现发烫、卡顿、ANR，可怀疑CPU问题，思路如下")]),a._v(" "),e("li",[a._v("logcat文件搜索“ANR in” 或者adb pull 拉取trace文件")]),a._v(" "),e("li",[a._v("利用traceview分析trace文件")]),a._v(" "),e("li",[a._v("使用android studio 里面的android Monitor分析cpu使用明细")])])]),a._v(" "),e("li",[a._v("关注点\n"),e("ul",[e("li",[a._v("和自身app的上个版本对比")]),a._v(" "),e("li",[a._v("和竞品对比")]),a._v(" "),e("li",[a._v("自身app各个activity对比")])])])]),a._v(" "),e("h3",{attrs:{id:"内存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内存"}},[a._v("#")]),a._v(" 内存")]),a._v(" "),e("ol",[e("li",[a._v("android系统架构中，进程分native进程和java进程；native进程采用c/c++实现，本质是linux进程，在/system/bin/目录下的程序文件运行后都是一native进程形式存在的；Android 虚拟机（Dalvik 或者 ART）实例的 Linux 进程，进程的入口 main 函数为 Java 函数。Android 虚拟机实例的宿主进程是 fork()系统调用创建的 Linux 进程，所以每一个 Android 上的 Java 进程实际上就是一个 Linux 进程，只是进程中多了一个 Android 虚拟机实例。因此，Java 进程的内存分配比 native 进程复杂，Android 系统中的应用程序基本都是 Java 进程，如桌面、电话、联系人、状态栏等等。")]),a._v(" "),e("li",[a._v("android内存限制：Android 系统为每一个 App 设置了可使用的 Heap(堆内存)大小限制，进入shell环境，cat /system/build.prop"),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("dalvik.vm.heapstartsize"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("8m\napp启动后, 系统分配给它的Heap初始大小. 随着App使用可增加\ndalvik.vm.heapgrowthlimit"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("192m\n默认情况下, App可使用的Heap的最大值, 超过这个值就会产生OOM\ndalvik.vm.heapsize"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("512m\n如果App的manifest文件中配置了largeHeap属性, 如下.则App可使用的Heap的最大值为此项设定值\ndalvik.vm.heaptargetutilization"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.75")]),a._v("\n当前理想的堆内存利用率. GC后, Dalvik的Heap内存会进行相应的调整, 调整到当前存活的对象的大小和 / Heap大小 接近这个选项的值, 即这里的0.75. 注意, 这只是一个参考值.\ndalvik.vm.heapminfree"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("2m\n单次Heap内存调整的最小值\ndalvik.vm.heapmaxfree"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("8m\n单次Heap内存调整的最大值\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br")])])]),a._v(" "),e("li",[a._v("LMK(Low Memory Killer)\n"),e("ul",[e("li",[a._v("在用户空间中指定了一组内存临界值，当其中的某个值与进程描述中的 oom_adj 值在同一范围时，该进程将被 Kill 掉。如果你的 APP 某个进程需要一直保存存活，你需要保持你的进程优先级足够高，并且占用比较小，因为 Low Memory Killer 在工作时，同一优先级的进程会先 kill 那个占用最大的。性能测试时主要关注待机时的内存是不是够小。")]),a._v(" "),e("li",[a._v("Low Memory Killer 的工作可能致系统变卡。为什么呢？因为它 kill 了一些进程，然而现在市面的很多 APP 为了保活都会自启，刚刚被 kill，立刻又起来。启动占用大量内存（还有 CPU），又触发 Low Memory Killer。频繁的被 kill 和启动形成了恶性循环，so…系统变的很卡。")])])]),a._v(" "),e("li",[a._v("OOM 与 LMK 关系\n"),e("ul",[e("li",[a._v("Google 为什么设定当 Java 进程申请的 Java 空间超过阈值时，就抛出 OOM 异常？\n"),e("ul",[e("li",[a._v("为了让 Android 系统能同时让比较多的进程常驻内存，这样程序启动时就不用每次都重新加载到内存，能够给用户更快的响应。")]),a._v(" "),e("li",[a._v("程序发生 OOM 并不表示 RAM 不足，而是因为程序申请的 Java heap 对象超过了虚拟机配置的 heapgrowthlimit。也就是说，在 RAM 充足的情况下，也可能发生 OOM。")])])]),a._v(" "),e("li",[a._v("如果 RAM 真的不足，会发生什么呢？\n"),e("ul",[e("li",[a._v("这时 Android 的 memory killer（LMK）会起作用，当 RAM 所剩不多时，memory killer 会杀死一些优先级比较低的进程来释放物理内存，让高优先级程序得到更多的内存。")])])]),a._v(" "),e("li",[a._v("可以通过 adb shell cat /proc/meminfo 查看 RAM 的使用情况。")])])]),a._v(" "),e("li",[a._v("绕过 dalvikvm heapsize 的限制\n"),e("ul",[e("li",[a._v("对于一些大型的应用程序（比如游戏），内存使用会比较多，很容易超出虚拟机 heapsize 的限制，这时怎么保证程序不会因为 OOM 而崩溃呢？\n"),e("ul",[e("li",[a._v("创建子进程：创建一个新的进程，那么我们就可以把一些对象分配到新进程的 heap 上了，从而达到一个应用程序使用更多的内存的目的，当然，创建子进程会增加系统开销，而且并不是所有应用程序都适合这样做，视需求而定。")]),a._v(" "),e("li",[a._v("使用 jni 在 native heap 上申请空间：native heap 的增长并不受 dalvik vm heapsize 的限制，只要 RAM 有剩余空间，程序员可以一直在 native heap 上申请空间，当然如果 RAM 快耗尽，LMK 会杀进程释放 RAM。大家使用一些软件时，有时候会闪退，就可能是软件在 native 层申请了比较多的内存导致的。")])])])])]),a._v(" "),e("li",[a._v("几个概念：空闲状态、中等规格、满规格\n"),e("ul",[e("li",[a._v("空闲状态：APP切入后台")]),a._v(" "),e("li",[a._v("中等规格：指对应用操作时间较长")]),a._v(" "),e("li",[a._v("满规格：指对应用操作时间较短")])])]),a._v(" "),e("li",[a._v("测试清单"),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),e("ol",[e("li",[a._v("空闲状态下的应用内存消耗情况")]),a._v(" "),e("li",[a._v("中等规格状态下的应用内存消耗情况")]),a._v(" "),e("li",[a._v("满规格状态下的应用内存消耗情况")]),a._v(" "),e("li",[a._v("应用内存峰值情况")]),a._v(" "),e("li",[a._v("应用内存泄露情况")]),a._v(" "),e("li",[a._v("应用是否常驻内存")]),a._v(" "),e("li",[a._v("压力测试后的内存使用情况")])])])]),a._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/Cr3UoksLcEjqUkpnJYonQA",target:"_blank",rel:"noopener noreferrer"}},[a._v("关于内存泄露"),e("OutboundLink")],1)]),a._v(" "),e("li",[a._v("测试工具\n"),e("ul",[e("li",[a._v("Android\n"),e("ul",[e("li",[a._v("Emmagee\n"),e("ul",[e("li",[a._v("网易开源")]),a._v(" "),e("li",[a._v("下载安装到手机，启动工具，选择相应设备，被测应用会展示内存、cpu、电量、流量等数据")]),a._v(" "),e("li",[a._v("测试完成后，本地sd卡会保存一份csv性能测试数据文件，可转为图表分析查看")])])]),a._v(" "),e("li",[a._v("命令行"),e("div",{staticClass:"language-shell script line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("adb shell dumpsys meminfo packageName\nadb shell dumpsys window "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" findstr mCurrentFocus，mCurrentFocus表示当前焦点\n\n关注参数：\nnative heap alloc（JNI层的内存分配）\ndalvik heap alloc （java层的内存分配）\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])])]),a._v(" "),e("li",[a._v("Android Monitor（AndroidStudio自带CPU和内存检测）")]),a._v(" "),e("li",[a._v("内存检测工具DDMS --\x3eHeap")])])]),a._v(" "),e("li",[a._v("Ios")])])])]),a._v(" "),e("h3",{attrs:{id:"上下行流量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#上下行流量"}},[a._v("#")]),a._v(" 上下行流量")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("- 可参考FPS测试，perfdog service可分别采集上行和下行流量\n")])])]),e("h3",{attrs:{id:"包大小限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#包大小限制"}},[a._v("#")]),a._v(" 包大小限制")]),a._v(" "),e("ol",{attrs:{start:"7"}},[e("li",[a._v("定义SLA\n"),e("ul",[e("li",[a._v("设置阈值，超出需要关注")])])]),a._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/alipay/SoloPi/wiki/Performance",target:"_blank",rel:"noopener noreferrer"}},[a._v("SoloPi开源工具"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://testerhome.com/topics/33190",target:"_blank",rel:"noopener noreferrer"}},[a._v("TesterHome专题帖"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/89496084",target:"_blank",rel:"noopener noreferrer"}},[a._v("SoloPi初探"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/hyxbiao/smallapple",target:"_blank",rel:"noopener noreferrer"}},[a._v("SmallApple开源的IOS自动化测试工具"),e("OutboundLink")],1),a._v(" "),e("ul",[e("li",[a._v("Smallapple致力于以最简单的方式，最小的代价提供给用户使用。")]),a._v(" "),e("li",[a._v("支持非越狱设备")]),a._v(" "),e("li",[a._v("不需要依赖源码")]),a._v(" "),e("li",[a._v("支持Appstore或者第三方下载的App安装测试")]),a._v(" "),e("li",[a._v("完全的命令行模式")])])]),a._v(" "),e("li",[a._v("GT是腾讯开发的一款App，但是也得在源码层面嵌入GT的SDK")])]),a._v(" "),e("h2",{attrs:{id:"弱网测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#弱网测试"}},[a._v("#")]),a._v(" 弱网测试")]),a._v(" "),e("ol",[e("li",[a._v("测试工具\n"),e("ul",[e("li",[a._v("Facebook开源的Augmented Traffic Control（ATC），能在移动设备上通过web界面随时设置不同的网络环境，同时多个设备可以连接到一个wifi，各自模拟不同的网络环境")]),a._v(" "),e("li",[a._v("微软开源的network emulator，可实现带宽、丢包、延时、抖动等弱网参数的限制")])])])]),a._v(" "),e("h2",{attrs:{id:"边界测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#边界测试"}},[a._v("#")]),a._v(" 边界测试")]),a._v(" "),e("p",[a._v("app在临界状态下的场景")]),a._v(" "),e("ol",[e("li",[a._v("场景\n"),e("ul",[e("li",[a._v("内存占用>90%的场景")]),a._v(" "),e("li",[a._v("存储占用>95%的场景")]),a._v(" "),e("li",[a._v("飞行模式切换")]),a._v(" "),e("li",[a._v("app访问权限，访问被限制的权限")]),a._v(" "),e("li",[a._v("长时间使用app，系统资源（内存泄露、过多的连接数）")]),a._v(" "),e("li",[a._v("出现ANR（application not response）")]),a._v(" "),e("li",[a._v("操作系统时间与标准时间不一致")]),a._v(" "),e("li",[a._v("时区切换")])])])]),a._v(" "),e("h2",{attrs:{id:"中断测试-交叉事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中断测试-交叉事件"}},[a._v("#")]),a._v(" 中断测试（交叉事件）")]),a._v(" "),e("ol",[e("li",[a._v("概念：指app执行过程中，有其他事件或应用中断当前应用执行的测试")]),a._v(" "),e("li",[a._v("测试：手工测试，真机测试")]),a._v(" "),e("li",[a._v("场景\n"),e("ul",[e("li",[a._v("多个app后台运行，交替切换至前台")]),a._v(" "),e("li",[a._v("使用相同系统资源的app，交替切换至前台，比如都需要播放音乐")]),a._v(" "),e("li",[a._v("app运行时接听电话")]),a._v(" "),e("li",[a._v("app运行时接听短信")]),a._v(" "),e("li",[a._v("app运行时闹钟事件")]),a._v(" "),e("li",[a._v("app运行时提示升级")]),a._v(" "),e("li",[a._v("app运行时进入低电量模式")]),a._v(" "),e("li",[a._v("app运行时网络切换")])])])]),a._v(" "),e("h2",{attrs:{id:"安全测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全测试"}},[a._v("#")]),a._v(" 安全测试")]),a._v(" "),e("ol",[e("li",[a._v("软件权限\n"),e("ul",[e("li",[a._v("用户授权级别")]),a._v(" "),e("li",[a._v("隐私数据泄露")]),a._v(" "),e("li",[a._v("非法授权访问")])])]),a._v(" "),e("li",[a._v("输入数据有效性验证、认证授权、敏感数据存储、数据加密")])]),a._v(" "),e("h2",{attrs:{id:"app日志收集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#app日志收集"}},[a._v("#")]),a._v(" APP日志收集")]),a._v(" "),e("h3",{attrs:{id:"ios-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ios-3"}},[a._v("#")]),a._v(" IOS")]),a._v(" "),e("ol",[e("li",[a._v("Xcode工具\n"),e("ul",[e("li",[a._v("手机连接mac后，打开xcode选择window进入organizer，在organizer窗口上，选中devices标签栏，右侧选中view device logs，即可看到mac曾经同步过的ios设备日志")])])]),a._v(" "),e("li",[a._v("itunes工具\n"),e("ul",[e("li",[a._v("手机和电脑连接，打开itunes工具，识别手机，然后点击同步，将手机资料信息同步到电脑")]),a._v(" "),e("li",[a._v("到电脑该应用目录下，找到对应app的问句，找相关日志数据")])])]),a._v(" "),e("li",[a._v("itools工具")]),a._v(" "),e("li",[a._v("libimobiledevice工具\n"),e("ul",[e("li",[a._v("libimobiledevice又称libiphone，是一个开源包，可让linux支持连接iphone、ipod touch等ios设备")]),a._v(" "),e("li",[a._v("ideviceinstaller是libimobiledevice中的一个命令行工具，可安装卸载app，查看设备，和adb类似")]),a._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/my27RB17ltZJeIBKvdzWtA",target:"_blank",rel:"noopener noreferrer"}},[a._v("更多用法参考这里"),e("OutboundLink")],1)])])])]),a._v(" "),e("h3",{attrs:{id:"android-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#android-3"}},[a._v("#")]),a._v(" Android")]),a._v(" "),e("h2",{attrs:{id:"adb-安卓调试桥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adb-安卓调试桥"}},[a._v("#")]),a._v(" ADB（安卓调试桥）")]),a._v(" "),e("h3",{attrs:{id:"连接手机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接手机"}},[a._v("#")]),a._v(" 连接手机")]),a._v(" "),e("ol",[e("li",[a._v("USB连接手机\n"),e("ul",[e("li",[a._v("USB线连接手机和电脑")]),a._v(" "),e("li",[a._v("通过PC给手机安装adb驱动")]),a._v(" "),e("li",[a._v("手机打开开发者选项，开启USB调试")]),a._v(" "),e("li",[a._v("刷新驱动工具，即可看到连接的手机")]),a._v(" "),e("li",[a._v("命令行输入：adb devices查看设备")])])]),a._v(" "),e("li",[a._v("WIFI连接手机\n"),e("ul",[e("li",[a._v("USB线连接手机和电脑")]),a._v(" "),e("li",[a._v("通过PC给手机安装adb驱动")]),a._v(" "),e("li",[a._v("手机打开开发者选项，开启USB调试")]),a._v(" "),e("li",[a._v("命令行输入：adb tcpip 5555，重启adb监听的端口5555")]),a._v(" "),e("li",[a._v("端口USB连接")]),a._v(" "),e("li",[a._v("进入手机wifi连接，查看属性，查看手机ip")]),a._v(" "),e("li",[a._v("命令行输入：adb connect ip:5555")])])])]),a._v(" "),e("h2",{attrs:{id:"手势操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手势操作"}},[a._v("#")]),a._v(" 手势操作")]),a._v(" "),e("h2",{attrs:{id:"用户体验测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户体验测试"}},[a._v("#")]),a._v(" 用户体验测试")]),a._v(" "),e("h2",{attrs:{id:"静态代码扫描"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#静态代码扫描"}},[a._v("#")]),a._v(" 静态代码扫描")]),a._v(" "),e("h2",{attrs:{id:"竞品测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#竞品测试"}},[a._v("#")]),a._v(" 竞品测试")]),a._v(" "),e("h2",{attrs:{id:"说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[a._v("#")]),a._v(" 说明")]),a._v(" "),e("p",[a._v("相关性能标准衡量，通常没有明确的标准，可参考历史统计，以及竞品分析比较")]),a._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://testerhome.com/topics/3969",target:"_blank",rel:"noopener noreferrer"}},[a._v("testerhome专题"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://www.yuque.com/chaoaixiao-cf4bn/kq4hb1/pc2ylw",target:"_blank",rel:"noopener noreferrer"}},[a._v("语雀同学整理的移动端专项1"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://www.yuque.com/imhelloworld/bypiud/sg8v4y",target:"_blank",rel:"noopener noreferrer"}},[a._v("语雀同学整理的移动端专项2"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://perfdog.qq.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("PerfDog官方"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/M8AfVbW4wADRM5u_1OMRog",target:"_blank",rel:"noopener noreferrer"}},[a._v("PerfDog使用"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://developer.android.google.cn/studio/intro?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[a._v("安卓开发者文档"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/vO9m_p6y-bS675Ay_V2Q9w",target:"_blank",rel:"noopener noreferrer"}},[a._v("移动端主流性能测试工具1"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/KwkPI5AelvyGv_Y2ZUIvmA",target:"_blank",rel:"noopener noreferrer"}},[a._v("移动端主流性能测试工具2"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/Eaway/AppCrawler",target:"_blank",rel:"noopener noreferrer"}},[a._v("AppCrawler1"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/seveniruby/AppCrawler",target:"_blank",rel:"noopener noreferrer"}},[a._v("AppCrawler2"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://developer.aliyun.com/article/277985",target:"_blank",rel:"noopener noreferrer"}},[a._v("AppCrawler原理"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);