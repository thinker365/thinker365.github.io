(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{436:function(s,a,n){s.exports=n.p+"assets/img/uTools_1655647990507.c3d7d105.png"},555:function(s,a,n){"use strict";n.r(a);var t=n(35),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"部署说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署说明"}},[s._v("#")]),s._v(" 部署说明")]),s._v(" "),t("h3",{attrs:{id:"django在生产环境不应该处理静态资源-比如网页、图片等-的请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#django在生产环境不应该处理静态资源-比如网页、图片等-的请求"}},[s._v("#")]),s._v(" Django在生产环境不应该处理静态资源（比如网页、图片等）的请求")]),s._v(" "),t("ol",[t("li",[s._v("在开发阶段，为了是环境搭建容易，让Django处理静态资源的请求。")]),s._v(" "),t("li",[s._v("在生产环境不能这样做，使用Nginx来处理静态资源的请求。")])]),s._v(" "),t("h3",{attrs:{id:"django在生产环境不能直接处理http请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#django在生产环境不能直接处理http请求"}},[s._v("#")]),s._v(" Django在生产环境不能直接处理HTTP请求")]),s._v(" "),t("ol",[t("li",[s._v("Django是 wsgi web application 的框架，它只有一个简单的单线程 wsgi web server。 供调试时使用。性能很低。")]),s._v(" "),t("li",[s._v("在生产环境必须提供 专业的 wsgi web server，比如 uWSGI 或者 Gunicorn。")]),s._v(" "),t("li",[s._v("而且即使有了 uWSGI 或者 Gunicorn，我们最好还要在前面设置 Nginx 。所有的客户请求由它先接受，再进行相应的转发。")]),s._v(" "),t("li",[s._v("为什么要这样？Nginx 在整个后端的最前方， 可以实现 负载均衡、反向代理、请求缓存、响应缓存 、负荷控制等等一系列功能。可以大大的提高整个后端的性能和稳定性。\n"),t("img",{attrs:{src:n(436),alt:""}})])]),s._v(" "),t("h2",{attrs:{id:"架构说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#架构说明"}},[s._v("#")]),s._v(" 架构说明")]),s._v(" "),t("h3",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" Nginx")]),s._v(" "),t("ol",[t("li",[s._v("Nginx 运行起来是多个进程，接收从客户端（通常是浏览器或者手机APP）发过来的请求。")]),s._v(" "),t("li",[s._v("它会 根据请求的URL 进行判断：\n"),t("ul",[t("li",[s._v("如果请求的 是 静态资源，比如HTML文档、图片等，它直接从配置的路径进行读取，返回内容给客户端。")]),s._v(" "),t("li",[s._v("如果请求的 是 动态数据， 转发给 Gunicorn+Django 进行处理")])])])]),s._v(" "),t("h3",{attrs:{id:"gunicorn-django"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gunicorn-django"}},[s._v("#")]),s._v(" Gunicorn/Django")]),s._v(" "),t("ol",[t("li",[s._v("Gunicorn 和 Django 是运行在同一个 Python进程里面的。 它们都是用Python代码写的程序。")]),s._v(" "),t("li",[s._v("启动Gunicorn的时候，它会根据配置加载Django的入口模块，这个入口模块里面提供了WSGI接口。")]),s._v(" "),t("li",[s._v("当 Gunicorn 接收到 Nginx 转发的 HTTP请求后，就会调用 Django的 WSGI入口函数，将请求给Django进行处理。")]),s._v(" "),t("li",[s._v("Django框架 再根据请求的URL 和 我们项目配置的 URL 路由表，找到我们编写的对应的消息处理函数进行处理。")])]),s._v(" "),t("h2",{attrs:{id:"制作发布包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#制作发布包"}},[s._v("#")]),s._v(" 制作发布包")]),s._v(" "),t("p",[s._v("系统包括web前端系统（包括web前端的HTML、css、图片、js业务代码、js库等文件）、后端业务处理系统、数据库系统。")]),s._v(" "),t("ol",[t("li",[s._v("前端发布包")]),s._v(" "),t("li",[s._v("后端发布包\n"),t("ul",[t("li",[s._v("settings.py ，配置项DEBUG值为False")]),s._v(" "),t("li",[s._v("数据库改为生产环境的数据库")]),s._v(" "),t("li",[s._v("添加Linux启动shell脚本\n"),t("ul",[t("li",[s._v("生产环境，我们使用 Gunicorn 作为 Django的WSGI前端，首先我们需要创建一个 Gunicorn启动配置文件 ./bysms/gunicorn_conf.py ，内容如下")])]),s._v(" "),t("div",{staticClass:"language-shell script line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gunicorn/django  服务监听地址、端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1:8000'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gunicorn worker 进程个数，建议为： CPU核心个数 * 2 + 1")]),s._v("\nworkers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gunicorn worker 类型， 使用异步的event类型IO效率比较高")]),s._v("\nworker_class "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gevent"')]),s._v("  \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志文件路径")]),s._v("\nerrorlog "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home/byhy/gunicorn.log"')]),s._v("\nloglevel "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"info"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" sys,os\n\ncwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" os.getcwd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsys.path.append"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cwd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("ul",[t("li",[s._v("要保证我们的Django后端服务在linux上一个命令就能启动，需要开发一个 Linux 启动shell脚本 ./run.sh")])]),s._v(" "),t("div",{staticClass:"language-shell script line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DIR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$( cd "'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v('"\n'),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DIR")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DIR")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ulimit -n 50000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" gunicorn --config"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bysms/gunicorn_conf.py bysms.wsgi "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v(" /dev/null "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),s._v("然后，删除 所有app 的 migrations 目录（？？？）")])])])]),s._v(" "),t("h2",{attrs:{id:"安装配置nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装配置nginx"}},[s._v("#")]),s._v(" 安装配置Nginx")]),s._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("p",[s._v("以ubuntu为例")]),s._v(" "),t("div",{staticClass:"language-shell script line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("p",[s._v("文件路径：/etc/nginx/nginx.conf")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[s._v("user  thinker; # thinker用户运行Nginx进程\nworker_processes  2; # 启动两个Nginx worker 进程\n\nevents {\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个工作进程 可以同时接收 1024 个连接")]),s._v("\n    worker_connections  1024; \n}\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置 Nginx worker 进程 最大允许 2000个网络连接")]),s._v("\nworker_rlimit_nofile 2000;\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    sendfile        on;\n\n    keepalive_timeout  30;\n\n    gzip  on;\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置 动态服务器（比如Gunicorn/Django）")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主要配置 名称（这里是apiserver） 地址和端口    ")]),s._v("\n    upstream apiserver  {\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maintain a maximum of 20 idle connections to each upstream server")]),s._v("\n        keepalive 20;\n\n        server 127.0.0.1:8000; # 地址和端口\n    }\n   \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置 HTTP 服务器信息")]),s._v("\n    server {\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置网站的域名，这里请改为你申请的域名， 如果没有域名，使用IP地址。")]),s._v("\n        server_name  www.thinker.com;  \n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置访问静态文件的根目录，        ")]),s._v("\n        root /home/thinker/frontend/dist;\n        \n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置动态数据请求怎么处理")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面这个配置项说明了，当 HTTP 请求 URL以 /api/ 开头，")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 则转发给 apiserver 服务器进程去处理        ")]),s._v("\n        location /api/      {\n            proxy_pass         http://apiserver;\n            proxy_set_header   Host $host;\n        }\n    }\n\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br")])]),t("h3",{attrs:{id:"启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),t("div",{staticClass:"language-shell script line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("systemctl restart nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"查看日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看日志"}},[s._v("#")]),s._v(" 查看日志")]),s._v(" "),t("p",[s._v("路径 /var/log/nginx/error.log")]),s._v(" "),t("h3",{attrs:{id:"防火墙设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防火墙设置"}},[s._v("#")]),s._v(" 防火墙设置")]),s._v(" "),t("div",{staticClass:"language-shell script line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ufw allow "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"安装django"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装django"}},[s._v("#")]),s._v(" 安装Django")]),s._v(" "),t("div",{staticClass:"language-shell script line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这是先安装pip")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" python3-pip\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再安装 Django")]),s._v("\npip3 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" Django -i https://pypi.douban.com/simple/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"安装gunicorn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装gunicorn"}},[s._v("#")]),s._v(" 安装Gunicorn")]),s._v(" "),t("p",[s._v("执行下面的命令安装Gunicorn和它依赖的库gevent和greenlet（异步模式需要）")]),s._v(" "),t("div",{staticClass:"language-shell script line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("pip3 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" greenlet -i https://pypi.douban.com/simple/\npip3 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gevent    \npip3 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gunicorn\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"安装mysql-创建数据库和用户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装mysql-创建数据库和用户"}},[s._v("#")]),s._v(" 安装MySQL，创建数据库和用户")]),s._v(" "),t("h3",{attrs:{id:"安装-略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-略"}},[s._v("#")]),s._v(" 安装（略）")]),s._v(" "),t("h3",{attrs:{id:"启动服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动服务"}},[s._v("#")]),s._v(" 启动服务")]),s._v(" "),t("p",[s._v("先使用root用户创建数据库thinkerSystem，指定使用utf8的缺省字符编码，执行命令如下")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" thinkerSystem "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARACTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" utf8mb4  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLLATE")]),s._v(" utf8mb4_unicode_520_ci"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("再创建thinkerSystem系统用来连接数据库的用户，保证该用户有访问数据库的权限")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'thinker'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@'localhost'")]),s._v(" IDENTIFIED "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'thinker'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'thinker'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@'%'")]),s._v(" IDENTIFIED "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'thinker'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("随后输入如下命令，赋予thinker用户所有权限，访问系统所有数据库里面所有的表")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GRANT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'thinker'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@'localhost'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GRANT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'thinker'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@'%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"安装产品发布包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装产品发布包"}},[s._v("#")]),s._v(" 安装产品发布包")]),s._v(" "),t("p",[s._v("为了让Django认为你使用的虚拟机的IP地址或者域名是允许使用的， 需要修改settings.py 里面的配置项ALLOWED_HOSTS，加上一个你当前虚拟机的IP，也可以使用 '*' ， 表示所有IP都可以。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("ALLOWED_HOSTS "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("dos2unix run.sh（win上的文件到linux上，格式需要转换，主要是rn--\x3en）\nchmod +x run.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"创建数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库"}},[s._v("#")]),s._v(" 创建数据库")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("python3 manage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py makemigrations "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your_app_label"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\npython3 manage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py migrate \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("注意， <your_app_label> 需要替换成你的 Django 项目中的 app （只需要写包含了数据库表定义的App）的名字，可以是多个app，中间用空格隔开")]),s._v(" "),t("li",[s._v("开始我们要创建数据库的业务管理员账号，进入到manage.py所在目录，执行如下命令，")])]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("python3 manage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py createsuperuser\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"启动gunicorn-django"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动gunicorn-django"}},[s._v("#")]),s._v(" 启动Gunicorn/Django")]),s._v(" "),t("ol",[t("li",[s._v("进入到thinker用户home目录，执行命令 run.sh")]),s._v(" "),t("li",[s._v("执行命令ps -ef | grep python |grep gunicorn_conf |grep -v grep 查看是否启动成功。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);